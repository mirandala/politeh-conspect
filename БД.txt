Каждый набор данных имеет собственную структуру, которая определяется совкупностью полей
Каждому полю соответствует собственный объект
Основой для объектов полей является класс TField, который инкапсулирует основные свойства абстрактного поля независящего от типа данных. Например, чтобы получить значение поля Edit1.Text:=Tabel.1Fields[0] as String;
Свойство fields представляет собой индексированный список и если разработчик не менят порядок следования полей, то они соответствуют структуре БД(нумерация с 0)
В Delphi предусмотренно 2 способа создания объектов полей: динамические и статические

Динамические поля используются в случае, если разработчик не создал для них объекты на этапе разработки. Каждый не заданный явно объект поля автоматически создается при открытии набора данных. Компонент набора данных после подключения к таблице использует только динамические поля.

Статические поля создаются на этапе разработки. Их свойства доступны в инспекторе объектов. Создаются при помощи специального редактора, которое вызывается из контекстного меню. Меню редактоора позволяет создать поле, которое реально не существует в структуре данной таблицы. Для выбора типа используется группа радиокнопок (data,calculated,lookup)

Вычисляемые поля позволяют получить новые данные на основании существующих не меняя таблицу БД. Выражения для получения вычисляемых полей обычно размещают в методе обработчике. Этот метод будет выполняться при открытии набора данных, при переходе в режим редактирования. Сдесь можно использовать любые арифметические операции и функции, любые операторы языка и методы любых компонентов, но вычисляемые поля нельзя использовать для фильтрации набора данных(OnFilterRecord вызывается до вычисляемого поля)

Создание отчетов

Основным средством создания отчетов является генератор отчетов Rave Reports. Состоит из 3 частей:
1 Ядро генератора. Обеспечивает управление отчетом
2 Визуальная среда разработки отчетов. Предназначена для создания шаблонов отчетов
3 Компоненты Rave Report которые находятся на одноименной закладке. Делятся на несколько функциональных групп:
	1 Компонент отчета TRVProject. Он обеспечивает загрузку заранее созданного в визуальной среде отчета из файла с расширением .rav
	2 Компонент управления отчетом TRVSystem. Обеспечивает работу приложения с отчетом.
	3 Компоненты соединения с источниками данных предназначенны для подключения различных источников к отчетам (-TRVCustomConnection, -TRVTableConnection, -TRVQuerryConnection, -TRVDatasetConnection)
	4 Компоненты преобразования данных. Позволяют конвертировать отчеты в другие форматы

Для того чтобы приложения могло выполнять функции печати отчетов, нужно выполнить следующие действия:
1 В визуальной среде Rave Report создать проект отчета и сохранить его
2 Перенести в Delphi на форму компонент TRVProject и связать его с файлом проекта отчета при помощи свойства ProjectFile
3 Перенести компоненты TRVSystem и связать его с TRVProject с помощью свойства Engine
4 Написать код приложению, который обеспечивает просмотр и печать отчета